generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "foreignKeys"
}

enum Condition {
  NEW
  GOOD
  DEFECT
  BROKEN
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  expires   DateTime
  createdAt DateTime @default(now())

  @@index([userId])
  @@index([expires])
}

model User {
  id           String    @id @default(cuid())
  username     String    @unique
  passwordHash String
  role         String?
  items        Item[]
  sessions     Session[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Item {
  id             String      @id @default(cuid())
  ownerId        String
  owner          User        @relation(fields: [ownerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  images         ItemImage[]
  name           String
  description    String?
  brandModel     String?
  category       String?
  quantity       Int         @default(1)
  unitPrice      Decimal?    @db.Decimal(12, 2)
  purchasedAt    DateTime?
  fundingSource  String?
  location       String?
  floor          String?
  room           String?
  rack           String?
  condition      Condition   @default(GOOD)
  damagedAt      DateTime?
  pic            String?
  lastCheckedAt  DateTime?
  code           String?     @unique
  qrPayload      String
  qrImage        String?
  barcodePayload String?
  barcodeImage   String?
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt

  @@index([ownerId, category])
  @@index([name])
}

model ItemImage {
  id        String   @id @default(cuid())
  itemId    String
  item      Item     @relation(fields: [itemId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  url       String
  createdAt DateTime @default(now())
}
